ARCH := arch()
HOME := env("HOME") 
vscode_ext_version := "1.26.3"
vscode_dbg_path := HOME / ".vscode/extensions/ms-vscode.cpptools/extension/debugAdapters/bin/OpenDebugAD7"
 
default:
  just --list

install-ripgrep:
  #!/bin/bash
  set -e
  if ! command -v rg >/dev/null; then
    ${HOME}/.cargo/bin/cargo install ripgrep
  else
    echo "Ripgrep exists"
  fi

install-bottom:
  #!/bin/bash
  set -e
  if ! command -v btm >/dev/null; then
    ${HOME}/.cargo/bin/cargo install bottom
  else
    echo "Bottom exists"
  fi

install-fd-find:
  #!/bin/bash
  set -e
  if ! command -v fd >/dev/null; then
    ${HOME}/.cargo/bin/cargo install fd-find
  else
    echo "fd-find exists"
  fi

install-neovim INSTALL_DIR = "~/software/neovim":
  #!/bin/bash
  set -e
  if ! command -v nvim >/dev/null; then
    echo {{YELLOW}} Note: installing neovim to $(realpath {{INSTALL_DIR}}) {{NORMAL}}
    rm -rf {{INSTALL_DIR}} || true
    tmpdir=$(mktemp -d /tmp/nvim.XXXXXXXX)
    cd ${tmpdir}
    curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim-linux-{{ARCH}}.tar.gz
    tar -xzf nvim-linux-{{ARCH}}.tar.gz
    mkdir -p {{INSTALL_DIR}}
    sudo mv nvim-linux-{{ARCH}} {{INSTALL_DIR}}
  else
    echo "Nvim already installed"
  fi

setup-nvim-path-zsh INSTALL_DIR = "~/software/neovim":
  #!/bin/bash
  set -e
  if cat "${HOME}/.zshenv" | grep 'export PATH=$PATH:{{INSTALL_DIR}}/nvim-linux-{{ARCH}}/bin/' >/dev/null; then 
    echo Nvim setup already in ZSH
  else
    echo 'export PATH=$PATH:{{INSTALL_DIR}}/nvim-linux-{{ARCH}}/bin/' >> ~/.zshenv
  fi

setup-nvim-path-bash INSTALL_DIR = "~/software/neovim":
  #!/bin/bash
  set -e
  if cat "${HOME}/.bashrc" | grep 'export PATH=$PATH:{{INSTALL_DIR}}/nvim-linux-{{ARCH}}/bin/' >/dev/null; then 
    echo 'export PATH=$PATH:{{INSTALL_DIR}}/nvim-linux-{{ARCH}}/bin/' >> ~/.bashrc
  else
    echo Nvim setup already in BASH
  fi

install-nerd-font:
  #!/bin/bash
  mkdir -p ${HOME}/.fonts/
  cd ${HOME}/.fonts/
  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.3.0/DejaVuSansMono.zip
  unzip DejaVuSansMono.zip
  rm DejaVuSansMono.zip

install-nerd-font-kitty:
  #!/bin/bash
  set -e
  grep font_family DejaVuSansMNerdFont ${HOME}/.config/kitty/kitty.conf || echo "font_family DejaVuSansMono Nerd Font" >> ${HOME}/.config/kitty/kitty.conf

install-njs VERSION="23.11.1":
  #!/bin/bash
  set -e
  cd ${HOME}/Downloads
  MAJOR_VERSION=$(echo {{VERSION}} | cut -d. -f1)
  wget https://nodejs.org/download/release/latest-v${MAJOR_VERSION}.x/node-v{{VERSION}}-linux-x64.tar.gz
  tar -xzf node-v{{VERSION}}-linux-x64.tar.gz
  sudo cp -r node-v{{VERSION}}-linux-x64/bin/* /usr/bin/ 
  sudo cp -r node-v{{VERSION}}-linux-x64/lib/* /usr/lib/ 
  sudo cp -r node-v{{VERSION}}-linux-x64/include/* /usr/include/ 
  sudo cp -r node-v{{VERSION}}-linux-x64/share/* /usr/share/ 

install-zsh:
  #!/bin/bash
  set -e
  if ! command -v zsh >/dev/null; then
    sudo apt install -y zsh
  else
    echo "ZSH exist"
  fi

install-luarocks-penlight:
  #!/bin/bash
  set -e
 
  if ! command -v luarocks >/dev/null; then
    sudo apt install -y luarocks
  else
    echo "luarocks exists"
  fi

  if luarocks list | grep penlight >/dev/null; then
    echo "penlight exist"
  else
    sudo luarocks install penlight
  fi

setup-cargo-zsh:
  #!/bin/bash
  set -e
  if cat "${HOME}/.zshenv" | grep 'export PATH=$HOME/.cargo/bin:$PATH' >/dev/null; then 
    echo Cargo setup already in ZSH
  else
    echo 'export PATH=$HOME/.cargo/bin:$PATH' >> ${HOME}/.zshenv
  fi

change-shell-zsh:
  #!/bin/bash
  set -e
  sudo chsh -s $(which zsh)

install-oh-my-zsh:
  #!/bin/bash
  set -e
  if [ -d "${HOME}/.oh-my-zsh" ]; then
    echo "Oh My Zsh exists"
  else
    curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh > /tmp/install.sh
    chmod +x /tmp/install.sh
    RUNZSH=no CHSH=no sh -c /tmp/install.sh
  fi
 
link-nvim-config FORCE = "false":
  #!/bin/bash
  set -e
  DOTFILES_DIR=`realpath ${PWD}/../`
  if [ "$FORCE" = "true" ]; then
    rm -rf ${HOME}/.config/nvim/init.vim || true
  fi
  mkdir -p ${HOME}/.config/
  ln -s ${DOTFILES_DIR}/configs/nvim/ ${HOME}/.config/nvim

install-unzip:
  #!/bin/bash
  set -e
  if ! command -v unzip >/dev/null; then
    sudo apt install -y unzip
  else
    echo "Unzip install"
  fi

install-lazygit:
  #!/bin/bash
  set -e
  if ! command -v lazygit >/dev/null; then
    VERSION="0.53.0"
    wget https://github.com/jesseduffield/lazygit/releases/download/v${VERSION}/lazygit_${VERSION}_Linux_x86_64.tar.gz
    mkdir -p /tmp/lazygit_install/
    tar -xzf lazygit_${VERSION}_Linux_x86_64.tar.gz -C /tmp/lazygit_install/
    sudo mv /tmp/lazygit_install/lazygit /usr/bin/
    rm lazygit_${VERSION}_Linux_x86_64.tar.gz
    rm -rf /tmp/lazygit_install/
  else
    echo "Lazygit exists"
  fi

install-vcode-debugger:
  #!/bin/bash
  set -e
  if [ -f {{vscode_dbg_path}} ]; then
    echo "VCode exists"
  else
    cd /tmp/
    wget https://github.com/microsoft/vscode-cpptools/releases/download/v1.26.3/cpptools-linux-x64.vsix
    mkdir -p ${HOME}/.vscode/extensions/ms-vscode.cpptools/
    unzip -uo cpptools-linux-x64.vsix -d ${HOME}/.vscode/extensions/ms-vscode.cpptools/
    chmod +x {{vscode_dbg_path}}
  fi

